openapi: 3.0.1
info:
  title: Xprizo API
  description: Xprizo api endpoints
  contact:
    name: Support
    email: support@xprizo.com
  version: v1
paths:
  "/api/Agent/SubAgentList":
    get:
      tags:
      - Agent
      summary: Get a list of all subagents
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubAgentModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubAgentModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubAgentModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/Locations":
    get:
      tags:
      - Agent
      summary: Get the locations of all active agents
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProfileAgentLocationModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProfileAgentLocationModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProfileAgentLocationModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/Wallet/{accountId}":
    get:
      tags:
      - Agent
      summary: Get a agent wallet
      parameters:
      - name: accountId
        in: path
        description: id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/Transactions/{accountId}":
    get:
      tags:
      - Agent
      summary: Get transactions for a wallet
      parameters:
      - name: accountId
        in: path
        description: id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      - name: toDate
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletTransactionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletTransactionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletTransactionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/TradeLimitRequest":
    post:
      tags:
      - Agent
      summary: Request an increase in the trade limit (Agent Only)
      parameters:
      - name: accountId
        in: query
        description: ''
        schema:
          type: integer
          format: int64
      - name: amount
        in: query
        description: ''
        schema:
          type: number
          format: double
      - name: description
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/CashRequest":
    post:
      tags:
      - Agent
      summary: Agent Requests to transfer money to their account (Agent Only)
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AgentBankWithdrawalTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AgentBankWithdrawalTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AgentBankWithdrawalTransactionModel"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/AddSubAgentRequest":
    post:
      tags:
      - Agent
      summary: Send a request to become a subagent
      parameters:
      - name: agentId
        in: query
        description: the id of the agent to become a sub agent of
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/AgentSendPayment":
    post:
      tags:
      - Agent
      summary: Create a payment from one agent to another
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AgentSendPaymentTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AgentSendPaymentTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AgentSendPaymentTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/AgentRequestPayment":
    post:
      tags:
      - Agent
      summary: Create a payment request from another agent
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AgentRequestPaymentTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AgentRequestPaymentTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AgentRequestPaymentTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/ReferenceRequest":
    put:
      tags:
      - Agent
      summary: Request a reference from another agent (a user needs references to
        become an agent)
      parameters:
      - name: recipientId
        in: query
        description: ''
        schema:
          type: integer
          format: int64
      - name: cancel
        in: query
        description: ''
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/ReferenceEndorse":
    put:
      tags:
      - Agent
      summary: Endose a user and a suitable candidate to become an agent
      parameters:
      - name: contactId
        in: query
        description: ''
        schema:
          type: integer
          format: int64
      - name: action
        in: query
        description: ''
        schema:
          type: string
          default: Given
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/SubAgentApproved":
    put:
      tags:
      - Agent
      summary: Approve the subagent request (BackOffice)
      parameters:
      - name: taskId
        in: query
        description: Id of the subagent request
        schema:
          type: integer
          format: int64
      - name: comment
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/SetWalletAccess":
    put:
      tags:
      - Agent
      summary: Grant/Deny agent wallet access to sub-agent
      parameters:
      - name: subAgentId
        in: query
        description: Your contacts Id
        schema:
          type: integer
          format: int64
      - name: value
        in: query
        description: True=Request/False=Revoke
        schema:
          type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/SetSubAgentCommission":
    put:
      tags:
      - Agent
      summary: Set sub-agent Commission
      parameters:
      - name: subAgentId
        in: query
        description: Sub agent to remove
        schema:
          type: integer
          format: int64
      - name: value
        in: query
        description: Commission Percent (Must be lower than agents commission)
        schema:
          type: number
          format: double
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Agent/DeleteSubAgent":
    delete:
      tags:
      - Agent
      summary: Remove a sub agent.
      parameters:
      - name: subAgentId
        in: query
        description: Sub agent to remove
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/GetModel":
    get:
      tags:
      - Category
      summary: Get Item
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CategoryModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/CategoryModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/CategoryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/List":
    get:
      tags:
      - Category
      summary: Get all Category
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/ListAll":
    get:
      tags:
      - Category
      summary: Get all Category
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/SetName":
    put:
      tags:
      - Category
      summary: Set Item Name
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: Item Name
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/SetDescription":
    put:
      tags:
      - Category
      summary: Set Category Description
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: Item Description
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/SetPublic":
    put:
      tags:
      - Category
      summary: Make Category public
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: true|false
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/SetData/{hashId}":
    put:
      tags:
      - Category
      summary: Set Category Description
      parameters:
      - name: hashId
        in: path
        description: The Category id
        required: true
        schema:
          type: string
      requestBody:
        description: Category Description
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/SetPdfAttachment":
    post:
      tags:
      - Category
      summary: Set Pdf Attachment
      parameters:
      - name: hashId
        in: query
        description: The Category id
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ActivityKycModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ActivityKycModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ActivityKycModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/AddItem":
    post:
      tags:
      - Category
      summary: Add Category
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CategoryModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/CategoryModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/CategoryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/Delete/{hashId}":
    delete:
      tags:
      - Category
      summary: Delete Category
      parameters:
      - name: hashId
        in: path
        description: Id of Item
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/GetProperties":
    get:
      tags:
      - Category
      summary: Get Category properties
      parameters:
      - name: hashId
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryPropertyModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryPropertyModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CategoryPropertyModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/UpdateProperty":
    put:
      tags:
      - Category
      summary: Update Property
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryPropertyModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CategoryPropertyModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CategoryPropertyModel"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/AddProperty":
    put:
      tags:
      - Category
      summary: Add Property
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: name
        in: query
        description: Property Name
        schema:
          type: string
      - name: type
        in: query
        description: 'Type Of Property: String|Number|Boolean|Image|List'
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Category/DeleteProperty/{hashId}":
    delete:
      tags:
      - Category
      summary: Delete Category Property
      parameters:
      - name: hashId
        in: path
        description: Id of Category
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Search":
    get:
      tags:
      - Contact
      summary: Get a users Id.  Only users that have enabled visibility can be found
      parameters:
      - name: value
        in: query
        description: Enter username, email or mobile number
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Get/{id}":
    get:
      tags:
      - Contact
      summary: Get contact information
      parameters:
      - name: id
        in: path
        description: ContactId of the user (0 for current)
        required: true
        schema:
          type: integer
          format: int64
          default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContactModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContactModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/GetBusiness/{hashId}":
    get:
      tags:
      - Contact
      summary: Get contact information
      parameters:
      - name: hashId
        in: path
        description: ContactId of the user (blank for current)
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContactBusinessModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactBusinessModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContactBusinessModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Name/{id}":
    get:
      tags:
      - Contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/TaxCountryCode":
    get:
      tags:
      - Contact
      summary: Get Tax Country Code
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Banks":
    get:
      tags:
      - Contact
      parameters:
      - name: id
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LedgerBankingModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LedgerBankingModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LedgerBankingModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Update":
    put:
      tags:
      - Contact
      summary: Update contact information
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContactModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContactModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContactModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContactModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/UpdatBusiness":
    put:
      tags:
      - Contact
      summary: Update contact business information
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactBusinessModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContactBusinessModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContactBusinessModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContactBusinessModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactBusinessModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContactBusinessModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/SetMobile":
    put:
      tags:
      - Contact
      summary: Update mobile number
      parameters:
      - name: value
        in: query
        description: Full mobile number
        schema:
          type: string
      - name: otp
        in: query
        description: One Time Password
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/SetEmail":
    put:
      tags:
      - Contact
      summary: Update email address - Only the
      parameters:
      - name: value
        in: query
        description: New email address
        schema:
          type: string
      - name: otp
        in: query
        description: One Time Password
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/SetTaxCountryCode":
    put:
      tags:
      - Contact
      summary: Set Tax Country
      parameters:
      - name: value
        in: query
        description: New email address
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Tasks/{id}":
    get:
      tags:
      - Contact
      summary: Get all tasks for a contact
      parameters:
      - name: id
        in: path
        description: ContactId of the user (0 for current)
        required: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: filter
        in: query
        description: filter task by type (All, AllLimits,OpenTickets,ExcludeHidden,General,Transaction,KycDocument,TradeLimit,Ticket,DailyLimit,
          OneOffWithdrawalAmount)
        schema:
          type: string
          default: All
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TaskModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TaskModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TaskModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/Messages":
    get:
      tags:
      - Contact
      summary: Get messages for a user
      parameters:
      - name: id
        in: query
        description: ContactId of the user (0 for current)
        schema:
          type: integer
          format: int64
          default: 0
      - name: relatedContactId
        in: query
        description: The id of the contact in to users contact list
        schema:
          type: integer
          format: int64
      - name: includeTransactions
        in: query
        description: Fetch messages and transactions
        schema:
          type: boolean
          default: true
      - name: from
        in: query
        description: Starting date
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MessagePageModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/MessagePageModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/MessagePageModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/MessagesUnreadCount":
    get:
      tags:
      - Contact
      summary: Get the total number of unread messages
      parameters:
      - name: id
        in: query
        description: ContactId of the user (0 for current)
        schema:
          type: integer
          format: int64
          default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/MessagesSetRead":
    put:
      tags:
      - Contact
      summary: Mark messages read for an specific users contact
      parameters:
      - name: id
        in: query
        description: ContactId of the user (0 for current)
        schema:
          type: integer
          format: int64
      - name: recipientId
        in: query
        description: the users contact's ContactId
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/SendMessage":
    post:
      tags:
      - Contact
      summary: Send a message to a contact
      parameters:
      - name: message
        in: query
        description: The message to send
        schema:
          type: string
      - name: recipientId
        in: query
        description: the users contact's ContactId
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MessageModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/MessageModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Contact/AddTicket":
    post:
      tags:
      - Contact
      summary: Add a new support ticket
      parameters:
      - name: description
        in: query
        description: Description of the issue
        schema:
          type: string
      - name: memo
        in: query
        description: Further information relation to the ticket
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Document/Types":
    get:
      tags:
      - Document
      summary: Get a list of document types
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DocumentTypeModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DocumentTypeModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DocumentTypeModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Document/List/{contactId}":
    get:
      tags:
      - Document
      summary: List documents for a contact
      parameters:
      - name: contactId
        in: path
        description: ContactId of the user (0 for current)
        required: true
        schema:
          type: integer
          format: int64
          default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ActivityKycModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ActivityKycModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ActivityKycModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Document/Add/{contactId}":
    post:
      tags:
      - Document
      summary: Upload a new document
      parameters:
      - name: contactId
        in: path
        description: ContactId of the user (0 for current)
        required: true
        schema:
          type: integer
          format: int64
      - name: code
        in: query
        description: the code for the type of document
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ActivityKycModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ActivityKycModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ActivityKycModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Document/Delete/{id}":
    delete:
      tags:
      - Document
      summary: Delete a document
      parameters:
      - name: id
        in: path
        description: The Id of the document to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/CardDeposit":
    post:
      tags:
      - ISGPay
      summary: Create Data For Card Form Redirect
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserCardDepositTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserCardDepositTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserCardDepositTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/CardDepositResponse":
    post:
      tags:
      - ISGPay
      parameters:
      - name: data
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/RequestPayment":
    post:
      tags:
      - ISGPay
      summary: Make deposit and pay request
      parameters:
      - name: key
        in: query
        description: ''
        schema:
          type: string
      - name: redirect
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/RequestPaymentResponse":
    post:
      tags:
      - ISGPay
      parameters:
      - name: data
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/Send":
    post:
      tags:
      - ISGPay
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/StringKeyPairModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/StringKeyPairModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/StringKeyPairModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/SendResponse":
    post:
      tags:
      - ISGPay
      parameters:
      - name: data
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ISGPayModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/ISGPay/CheckStatus":
    get:
      tags:
      - ISGPay
      parameters:
      - name: reference
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/Model":
    get:
      tags:
      - Item
      summary: Get Item
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ItemDetailModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemDetailModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ItemDetailModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/List":
    get:
      tags:
      - Item
      summary: Get all items
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemListModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemListModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemListModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/MergeTemplate":
    get:
      tags:
      - Item
      summary: Get Form
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: format
        in: query
        description: HTML/PDF
        schema:
          type: string
          default: HTML
      responses:
        '200':
          description: Success
          content:
            text/html:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/html:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/TransactionReport/{transactionId}":
    get:
      tags:
      - Item
      summary: Generate a receipts for a transaction
      parameters:
      - name: transactionId
        in: path
        description: The id of the transaction
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetImage":
    put:
      tags:
      - Item
      summary: Set Image
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: pictureURL
        in: query
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetAmount":
    put:
      tags:
      - Item
      summary: Set Item Amount
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: Item Amount
        schema:
          type: number
          format: double
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetProperty":
    put:
      tags:
      - Item
      summary: Set Item Property Value
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: name
        in: query
        description: Property Name
        schema:
          type: string
      - name: value
        in: query
        description: Item Amount
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetPropertyImage":
    put:
      tags:
      - Item
      summary: Set Item Image
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: name
        in: query
        description: Property Name
        schema:
          type: string
      - name: pictureURL
        in: query
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetName":
    put:
      tags:
      - Item
      summary: Set Item Name
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: Item Name
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetDescription":
    put:
      tags:
      - Item
      summary: Set Item Description
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: Item Description
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/SetDetail":
    put:
      tags:
      - Item
      summary: Set Item Detail
      parameters:
      - name: hashId
        in: query
        description: The item id
        schema:
          type: string
      - name: value
        in: query
        description: Item Detail
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/Add":
    post:
      tags:
      - Item
      summary: Add Item
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemListModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ItemListModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ItemListModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ItemListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ItemListModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/Delete{hashId}":
    delete:
      tags:
      - Item
      summary: Delete Item
      parameters:
      - name: hashId
        in: path
        description: Id of Item
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/Subscriptions":
    put:
      tags:
      - Item
      summary: Subscriptions
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubscriptionModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubscriptionModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubscriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/Subscribe/{hashId}":
    put:
      tags:
      - Item
      summary: Subscribe
      parameters:
      - name: hashId
        in: path
        description: Category hashId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/Unsubscribe/{hashId}":
    delete:
      tags:
      - Item
      summary: Delete Category Property
      parameters:
      - name: hashId
        in: path
        description: Id of Category
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/PinSubscription":
    put:
      tags:
      - Item
      summary: Subscribe
      parameters:
      - name: hashId
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Item/UnpinSubscription":
    put:
      tags:
      - Item
      summary: Subscribe
      parameters:
      - name: hashId
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Merchant/RequestPayment":
    post:
      tags:
      - Merchant
      summary: Request Payment From a user
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MerchantRequestPaymentTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/MerchantRequestPaymentTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/MerchantRequestPaymentTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/StringKeyPairModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/StringKeyPairModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/StringKeyPairModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Merchant/Add":
    post:
      tags:
      - Merchant
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Merchant/GetData":
    get:
      tags:
      - Merchant
      parameters:
      - name: contactId
        in: query
        schema:
          type: integer
          format: int64
      - name: key
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TranHeadUserModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TranHeadUserModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TranHeadUserModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference":
    get:
      tags:
      - Preference
      summary: Get current user preference
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PreferenceModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PreferenceModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PreferenceModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/ProfilePicture":
    get:
      tags:
      - Preference
      summary: Get Profile Picture
      parameters:
      - name: id
        in: query
        description: Id of the user (0 for current)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/NotificationCount":
    get:
      tags:
      - Preference
      summary: "//Get a count of the unread tasks"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetAllowMarketingEmails":
    put:
      tags:
      - Preference
      summary: Allow exprizo to send marketing emails and messages
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetVisibleByUserName":
    put:
      tags:
      - Preference
      summary: Allow users to find you by your user name
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetVisibleByEmail":
    put:
      tags:
      - Preference
      summary: Allow users to find you by your email
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetVisibleByPhone":
    put:
      tags:
      - Preference
      summary: Allow users to find you by your mobile number
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetLocationVisible":
    put:
      tags:
      - Preference
      summary: Allow users to see your location
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetFindOption":
    put:
      tags:
      - Preference
      summary: Set Find Option
      parameters:
      - name: value
        in: query
        description: 0=Private, 1=Public, 2=Friends
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetNotifyOnNewApproval":
    put:
      tags:
      - Preference
      summary: Get a notification if there is a new approval
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetNotifyOnNewTransaction":
    put:
      tags:
      - Preference
      summary: Get a notification when a new transaction is created
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetNotifyViaEmail":
    put:
      tags:
      - Preference
      summary: Send notifications via email
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetLatLng":
    put:
      tags:
      - Preference
      summary: Set location
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetLanguage":
    put:
      tags:
      - Preference
      summary: Set language
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetPayFeesFromSavings":
    put:
      tags:
      - Preference
      summary: When set, fees will be be taken from the savings account
      parameters:
      - name: value
        in: query
        description: ''
        schema:
          type: boolean
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetDefaultOTPType":
    put:
      tags:
      - Preference
      summary: Set the 2FA Access type
      parameters:
      - name: value
        in: query
        description: 0=No 2FA, 1=App, 2=Email, 3=SMS
        schema:
          "$ref": "#/components/schemas/OTPType"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetProfilePicture":
    put:
      tags:
      - Preference
      summary: Set profile picture
      parameters:
      - name: pictureURL
        in: query
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetNotificationPushToken":
    put:
      tags:
      - Preference
      summary: If a token is set then messages can be sent to the mobile
      parameters:
      - name: value
        in: query
        description: The token generated by the mobile
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetApprovalWebhook":
    put:
      tags:
      - Preference
      summary: Set a url that that can be used to receive callbacks when transaction
        you create are approved or rejected
      parameters:
      - name: url
        in: query
        description: The url to receive callbacks on
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetPaymentWebhook":
    put:
      tags:
      - Preference
      summary: Set a url that that can be used to receive callbacks when payment is
        made
      parameters:
      - name: url
        in: query
        description: The url to receive callbacks on
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/SetRequestPaymentWebhook":
    put:
      tags:
      - Preference
      summary: Set a url that that can be used to receive callbacks when request payment
        is made
      parameters:
      - name: url
        in: query
        description: The url to receive callbacks on
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Preference/NotificationCountClear":
    delete:
      tags:
      - Preference
      summary: Mark tasks as read
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/Get":
    get:
      tags:
      - Profile
      summary: Get a users profile
      parameters:
      - name: hashId
        in: query
        description: Users Id
        schema:
          type: string
          default: ''
      - name: merchantCode
        in: query
        description: ''
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProfileModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProfileModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProfileModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/GetFull":
    get:
      tags:
      - Profile
      summary: Get a users profile
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProfileFullModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProfileFullModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProfileFullModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/Log":
    get:
      tags:
      - Profile
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TaskModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TaskModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TaskModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/SetUserName":
    put:
      tags:
      - Profile
      summary: Change user name
      parameters:
      - name: value
        in: query
        description: The new user name
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/SetPassword":
    put:
      tags:
      - Profile
      parameters:
      - name: password
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/SetPin":
    put:
      tags:
      - Profile
      parameters:
      - name: pin
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/ClearPin":
    put:
      tags:
      - Profile
      summary: 'Clear pin. NOTE: If you have forgotten your pin first set your pin
        to a new pin'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/Unlock":
    put:
      tags:
      - Profile
      summary: UnLock profile so email, mobile and pin can be changed.  Profile remains
        unlocked for 5 minutes
      parameters:
      - name: otpType
        in: query
        schema:
          "$ref": "#/components/schemas/OTPType"
      - name: otp
        in: query
        schema:
          type: string
      - name: minutes
        in: query
        schema:
          type: integer
          format: int64
          default: 3
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Profile/Lock":
    put:
      tags:
      - Profile
      summary: Lock profile so email, mobile and pin cannot be changed
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/List":
    get:
      tags:
      - Relationship
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/GetModel":
    get:
      tags:
      - Relationship
      parameters:
      - name: relatedContactId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/DefaultWallet":
    get:
      tags:
      - Relationship
      summary: Get contacts default wallet
      parameters:
      - name: relatedContactId
        in: query
        description: Your contacts Id
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/DefaultWallets":
    get:
      tags:
      - Relationship
      summary: Get Contacts Default Wallet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/Wallets":
    get:
      tags:
      - Relationship
      summary: Get Related Contact Wallets
      parameters:
      - name: tranType
        in: query
        description: Matching =Matching currency, Defaults=Default wallet, Agents=Agent
          same currency wallet, Null=All
        schema:
          type: string
      - name: currencyCode
        in: query
        description: Get a users wallet for this currency, if it is available
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/LinkedWallets":
    get:
      tags:
      - Relationship
      summary: Get a list wallets that have been shared with you
      parameters:
      - name: relatedContactId
        in: query
        description: Get Wallets for a specific contact
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        description: Get a users wallet for this currency, if it is available
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/GetWalletAccess":
    get:
      tags:
      - Relationship
      summary: Get type of wallet access
      parameters:
      - name: relatedContactId
        in: query
        description: Get Wallets for a specific contact
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/Transactions":
    get:
      tags:
      - Relationship
      parameters:
      - name: relatedContactId
        in: query
        schema:
          type: integer
          format: int64
      - name: from
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipTranModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipTranModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipTranModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/Add":
    post:
      tags:
      - Relationship
      summary: Add a contact to your contact list and send a friend request to the
        contact
      parameters:
      - name: relatedContactId
        in: query
        description: The contacts id
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/SetStatusActive":
    put:
      tags:
      - Relationship
      parameters:
      - name: relatedContactId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/SetStatusHidden":
    put:
      tags:
      - Relationship
      parameters:
      - name: relatedContactId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/SetStatusBlocked":
    put:
      tags:
      - Relationship
      parameters:
      - name: relatedContactId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Relationship/SetAccess":
    put:
      tags:
      - Relationship
      summary: Give or Revoke access to account
      parameters:
      - name: relatedContactId
        in: query
        description: Your contacts Id
        schema:
          type: integer
          format: int64
      - name: access
        in: query
        description: None/Read/Create/Approve/Full
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/RelationshipModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Report/Get":
    get:
      tags:
      - Report
      summary: Get contact information
      parameters:
      - name: type
        in: query
        description: type of data
        schema:
          "$ref": "#/components/schemas/ReportTypeEnum"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ReportModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ReportModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ReportModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Report/Save":
    put:
      tags:
      - Report
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReportModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ReportModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ReportModel"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/GetToken":
    post:
      tags:
      - Security
      summary: Login to the system
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CredentialModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CredentialModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CredentialModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/FirebaseLogin":
    post:
      tags:
      - Security
      summary: Login with firebase credentials
      parameters:
      - name: imageUrl
        in: query
        description: ''
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/GoogleLogin":
    post:
      tags:
      - Security
      summary: Login with google token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/AppleLogin":
    post:
      tags:
      - Security
      summary: Login with apple token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/Logout":
    post:
      tags:
      - Security
      summary: Logout of the system
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/Register":
    post:
      tags:
      - Security
      summary: Register an new user
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TokenModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/ValidateUser":
    post:
      tags:
      - Security
      summary: Validate new user
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ProfileRegisterModel"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/SendOtpToEmail":
    get:
      tags:
      - Security
      summary: Send one time password to email address
      parameters:
      - name: email
        in: query
        description: ''
        schema:
          type: string
      - name: captacha
        in: query
        description: Captcha Code
        schema:
          type: string
      - name: isNew
        in: query
        description: Validate new email
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/SendOtpToSMS":
    get:
      tags:
      - Security
      summary: Send one time password to users mobile number
      parameters:
      - name: countryCode
        in: query
        description: ''
        schema:
          type: string
      - name: nationalNumber
        in: query
        description: ''
        schema:
          type: string
      - name: captacha
        in: query
        description: Capture Code
        schema:
          type: string
      - name: isNew
        in: query
        description: Validate new email
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/CheckOtp":
    post:
      tags:
      - Security
      summary: Send one time password to user
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CredentialModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CredentialModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CredentialModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/SendOtp":
    post:
      tags:
      - Security
      summary: Send one time password to user
      parameters:
      - name: otpType
        in: query
        schema:
          "$ref": "#/components/schemas/OTPType"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/SendNewOtp":
    post:
      tags:
      - Security
      summary: Send one time password to user
      parameters:
      - name: value
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/GetCaptcha":
    get:
      tags:
      - Security
      summary: Get a Capture Image
      parameters:
      - name: value
        in: query
        description: email or phone number
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/ActivateAccount":
    put:
      tags:
      - Security
      summary: Activate account
      parameters:
      - name: value
        in: query
        description: email or phone number
        schema:
          type: string
      - name: otp
        in: query
        description: One time pin
        schema:
          type: string
      - name: otpType
        in: query
        description: "-1=default, 1=App, 2=Email, 3=SMS"
        schema:
          "$ref": "#/components/schemas/OTPType"
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/GetResetKey":
    get:
      tags:
      - Security
      summary: Get Reset Key
      parameters:
      - name: value
        in: query
        description: email or phone number
        schema:
          type: string
      - name: otp
        in: query
        description: One time pin
        schema:
          type: string
      - name: otpType
        in: query
        description: "-1=default, 1=App, 2=Email, 3=SMS"
        schema:
          "$ref": "#/components/schemas/OTPType"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Security/ResetPassword":
    put:
      tags:
      - Security
      summary: Reset users password
      parameters:
      - name: key
        in: query
        description: ''
        schema:
          type: string
      - name: newPassword
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/Info":
    get:
      tags:
      - System
      summary: Name and version data
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/SystemModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/SystemModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/Merchants":
    get:
      tags:
      - System
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MerchantListModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MerchantListModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MerchantListModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/CountryList":
    get:
      tags:
      - System
      summary: List of countries and codes
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CountryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CountryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CountryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/Currencies":
    get:
      tags:
      - System
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyItemModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyItemModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyItemModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/Banks":
    get:
      tags:
      - System
      parameters:
      - name: currencyCode
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LedgerBankingModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LedgerBankingModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LedgerBankingModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/BankCount":
    get:
      tags:
      - System
      parameters:
      - name: currencyCode
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int64
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/System/Bank":
    get:
      tags:
      - System
      parameters:
      - name: hashId
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LedgerBankingModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LedgerBankingModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LedgerBankingModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/Get/{id}":
    get:
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TaskNoteModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TaskNoteModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TaskNoteModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/AddComment/{id}":
    post:
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: comment
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/AddAttachment/{id}":
    post:
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/Hide/{id}":
    put:
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/Show/{id}":
    put:
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/Cancel/{id}":
    put:
      tags:
      - Task
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: reason
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/OneOffWithdrawalAmountRequest/{accountId}":
    post:
      tags:
      - Task
      summary: Request an increase in the once off limit
      parameters:
      - name: accountId
        in: path
        description: ''
        required: true
        schema:
          type: integer
          format: int64
      - name: amount
        in: query
        description: ''
        schema:
          type: number
          format: double
      - name: description
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Task/DailyWithdrawalLimitRequest/{accountId}":
    post:
      tags:
      - Task
      summary: Request an increase in the daily limit
      parameters:
      - name: accountId
        in: path
        description: ''
        required: true
        schema:
          type: integer
          format: int64
      - name: limit
        in: query
        description: ''
        schema:
          type: number
          format: double
      - name: description
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/StatusByReference/{accountId}":
    get:
      tags:
      - Transaction
      summary: "Get a transaction status by reference \r\nStatuses (Active,Pending,Hold,Void,NotFound)"
      parameters:
      - name: accountId
        in: path
        description: the users wallet id
        required: true
        schema:
          type: integer
          format: int64
      - name: reference
        in: query
        description: the reference for the transaction
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/InstantPaymentQRCode":
    post:
      tags:
      - Transaction
      summary: Get instantPayment QRCode
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserInstantPaymentTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserInstantPaymentTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserInstantPaymentTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/StringKeyPairModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/StringKeyPairModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/StringKeyPairModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/ApprovalCancel":
    get:
      tags:
      - Transaction
      summary: Cancel a pending transaction
      parameters:
      - name: key
        in: query
        description: The id key of the transaction
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/ApprovalAccept":
    get:
      tags:
      - Transaction
      summary: Approve a pending transaction
      parameters:
      - name: key
        in: query
        description: the approval key of the transaction
        schema:
          type: string
      - name: pin
        in: query
        description: Supply pin when required
        schema:
          type: string
      - name: once
        in: query
        description: Remove approval if it fails
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/ApprovalReject":
    get:
      tags:
      - Transaction
      summary: Reject/cancel a pending transaction
      parameters:
      - name: key
        in: query
        description: the id/key of the transaction
        schema:
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/SendPayment":
    post:
      tags:
      - Transaction
      summary: Create a payment to another user
      parameters:
      - name: action
        in: query
        description: Approve - requires approval (default), Commit - adds transaction
          immidiately, Callback - waits for apprval from callback
        schema:
          "$ref": "#/components/schemas/AddTransactionAction"
      - name: pin
        in: query
        description: Supply pin when required
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserSendPaymentTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserSendPaymentTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserSendPaymentTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/RequestPayment":
    post:
      tags:
      - Transaction
      summary: Create a payment request from another user
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserRequestPaymentTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserRequestPaymentTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserRequestPaymentTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/WalletExchange":
    post:
      tags:
      - Transaction
      summary: Create a transfer between users wallets
      parameters:
      - name: commit
        in: query
        description: Do not wait for approval
        schema:
          type: boolean
          default: false
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserWalletTransferTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserWalletTransferTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserWalletTransferTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/BankDeposit":
    post:
      tags:
      - Transaction
      summary: Create a user bank deposit
      parameters:
      - name: action
        in: query
        description: Approve - requires approval (default), Commit - add immidiately,
          Calback - waits for apprval from callback
        schema:
          "$ref": "#/components/schemas/AddTransactionAction"
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserBankDepositTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserBankDepositTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserBankDepositTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/AgentDeposit":
    post:
      tags:
      - Transaction
      summary: Create a deposit from an agent
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAgentDepositTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserAgentDepositTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserAgentDepositTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/AgentWithdrawal":
    post:
      tags:
      - Transaction
      summary: Create a withdrawal from an agent
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAgentWithdrawalTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserAgentWithdrawalTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserAgentWithdrawalTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/SavingsDeposit":
    post:
      tags:
      - Transaction
      summary: Deposit to savings
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserSavingsDepositTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserSavingsDepositTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserSavingsDepositTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Transaction/SavingsWithdrawal":
    post:
      tags:
      - Transaction
      summary: Withdrawal from savings
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserSavingsWithdrawalTransactionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserSavingsWithdrawalTransactionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserSavingsWithdrawalTransactionModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/List":
    get:
      tags:
      - Wallet
      summary: Get all wallets for a user
      parameters:
      - name: contactId
        in: query
        description: ContactId of the user (0 for current)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletAccountModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletAccountModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletAccountModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/SavingsList":
    get:
      tags:
      - Wallet
      summary: Get savings wallets for a user
      parameters:
      - name: contactId
        in: query
        description: ContactId of the user (0 for current)
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletAccountModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletAccountModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletAccountModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/{accountId}":
    get:
      tags:
      - Wallet
      summary: Get a user wallet
      parameters:
      - name: accountId
        in: path
        description: id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/Info":
    get:
      tags:
      - Wallet
      summary: Get information about a user wallet
      parameters:
      - name: contact
        in: query
        description: Username,Email or phone number
        schema:
          type: string
      - name: currencyCode
        in: query
        description: The first wallet with this currency - leave blank to get default
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/InfoList":
    get:
      tags:
      - Wallet
      summary: Get a basic list of wallets for a user.
      parameters:
      - name: contact
        in: query
        description: enter email, phone number or username
        schema:
          type: string
          default: ''
      - name: merchantCode
        in: query
        description: The merchant that the wallet is for
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WalletModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/Owner":
    get:
      tags:
      - Wallet
      summary: Get owner of a wallet.
      parameters:
      - name: accountId
        in: query
        description: ''
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/DescriptionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/Options":
    get:
      tags:
      - Wallet
      summary: Get information about options available for this type of wallet
      parameters:
      - name: currencyCode
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/StringKeyPairModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/StringKeyPairModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/StringKeyPairModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/Transactions/{accountId}":
    get:
      tags:
      - Wallet
      summary: Get transactions for a wallet
      parameters:
      - name: accountId
        in: path
        description: id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      - name: toDate
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      - name: limit
        in: query
        description: ''
        schema:
          type: integer
          format: int32
          default: 100
      - name: offset
        in: query
        description: ''
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletTransactionModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletTransactionModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletTransactionModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/Transaction/{transactionId}":
    get:
      tags:
      - Wallet
      summary: Get a single transaction
      parameters:
      - name: transactionId
        in: path
        description: The transaction id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletTranModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletTranModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletTranModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/TransactionByReference/{accountId}":
    get:
      tags:
      - Wallet
      summary: Get a users transaction by reference
      parameters:
      - name: accountId
        in: path
        description: the users wallet id
        required: true
        schema:
          type: integer
          format: int64
      - name: reference
        in: query
        description: the reference for the transaction
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletTranModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletTranModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletTranModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/TransactionSummary":
    get:
      tags:
      - Wallet
      summary: "Get wallet transaction summary in Base Currency\r\nData will be grouped
        by Year, Month, Date, Hour or Minute depending on the date period\r\nTransactions
        will be summarised as follows\r\neg \r\nrange greater than a year then by
        year\r\nrange greater than a month and less than a year then months\r\nrange
        greater than a month and less than a year then months"
      parameters:
      - name: accountId
        in: query
        description: the users wallet id
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      - name: toDate
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionSummaryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionSummaryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionSummaryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/MonthlyBalances":
    get:
      tags:
      - Wallet
      summary: Get wallet balances for months that had transactions
      parameters:
      - name: accountId
        in: query
        description: the users wallet id
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionSummaryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionSummaryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransactionSummaryModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/TotalWithdrawals":
    get:
      tags:
      - Wallet
      summary: Get wallet monthly deposit total
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: number
                format: double
            application/json:
              schema:
                type: number
                format: double
            text/json:
              schema:
                type: number
                format: double
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/Add":
    post:
      tags:
      - Wallet
      summary: Add a new wallet
      parameters:
      - name: contactId
        in: query
        description: ContactId of the user (0 for current)
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        description: The currency code for the wallet
        schema:
          type: string
      - name: savings
        in: query
        description: Add a savings wallet
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/WalletAccountModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/SetDefault/{accountId}":
    put:
      tags:
      - Wallet
      summary: Set the default wallet
      parameters:
      - name: accountId
        in: path
        description: The id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/ClearNewTransactionCount/{accountId}":
    delete:
      tags:
      - Wallet
      summary: Remove the notification count of new transactions
      parameters:
      - name: accountId
        in: path
        description: The id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/StatementReport/{accountId}":
    get:
      tags:
      - Wallet
      summary: Generate a statement from wallet transactions
      parameters:
      - name: accountId
        in: path
        description: the id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        description: Starting date
        schema:
          type: string
          format: date-time
      - name: toDate
        in: query
        description: Ending date
        schema:
          type: string
          format: date-time
      - name: limit
        in: query
        description: Limit Number of trnasactions
        schema:
          type: integer
          format: int32
          default: 100
      - name: isAgent
        in: query
        description: Show agent transactions
        schema:
          type: boolean
          default: false
      - name: format
        in: query
        description: PDF,CSV
        schema:
          type: string
          default: PDF
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/TransactionReport/{transactionId}":
    get:
      tags:
      - Wallet
      summary: Generate a receipts for a transaction
      parameters:
      - name: transactionId
        in: path
        description: The id of the transaction
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/pdf:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/{id}":
    delete:
      tags:
      - Wallet
      summary: Delete the wallet - Note. It will only be deleted if it has no transactions
        associated with it.
      parameters:
      - name: id
        in: path
        description: the id of the wallet
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
  "/api/Wallet/ApprovalStatus":
    get:
      tags:
      - Wallet
      summary: Dummy function to return structure
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ApprovalStatusModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ApprovalStatusModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ApprovalStatusModel"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
            text/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
        '500':
          description: Server Error
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ErrorModel"
components:
  schemas:
    ActivityKycModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        noteId:
          type: integer
          format: int64
        taskId:
          type: integer
          format: int64
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        comments:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AddTransactionAction:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    AgentBankWithdrawalTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        agentId:
          type: integer
          format: int64
        bankId:
          type: integer
          format: int64
      additionalProperties: false
    AgentRequestPaymentTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        fromAgentId:
          type: integer
          format: int64
        toAgentId:
          type: integer
          format: int64
      additionalProperties: false
    AgentSendPaymentTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        fromAgentId:
          type: integer
          format: int64
        toAgentId:
          type: integer
          format: int64
      additionalProperties: false
    ApprovalModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        approveById:
          type: integer
          format: int64
        ttl:
          type: integer
          format: int64
          readOnly: true
        expiryDate:
          type: string
          format: date-time
        error:
          type: string
          nullable: true
      additionalProperties: false
    ApprovalStatusModel:
      type: object
      properties:
        statusType:
          "$ref": "#/components/schemas/PendingTransactionStatus"
        status:
          type: string
          nullable: true
          readOnly: true
        actionedById:
          type: integer
          format: int64
        affectedContactIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        transaction:
          "$ref": "#/components/schemas/TranHeadDataModel"
      additionalProperties: false
    CategoryModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
        isPublic:
          type: boolean
        owner:
          type: string
          nullable: true
      additionalProperties: false
    CategoryPropertyModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        categoryHashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        isRequired:
          type: boolean
        data:
          type: string
          nullable: true
        sortOrder:
          type: integer
          format: int32
      additionalProperties: false
    ContactBusinessModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        tradingName:
          type: string
          nullable: true
        taxNumber:
          type: string
          nullable: true
        taxCountryCode:
          type: string
          nullable: true
        regName:
          type: string
          nullable: true
        regNumber:
          type: string
          nullable: true
        regDate:
          type: string
          nullable: true
        contactPerson:
          type: string
          nullable: true
        phoneBusiness:
          type: string
          nullable: true
      additionalProperties: false
    ContactModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        physicalCountryCode:
          type: string
          nullable: true
        physicalStreet:
          type: string
          nullable: true
        physicalCity:
          type: string
          nullable: true
        physicalStateProvince:
          type: string
          nullable: true
        physicalZipPostalCode:
          type: string
          nullable: true
        postalCountryCode:
          type: string
          nullable: true
        postalStreet:
          type: string
          nullable: true
        postalCity:
          type: string
          nullable: true
        postalStateProvince:
          type: string
          nullable: true
        postalZipPostalCode:
          type: string
          nullable: true
        kycValidUntil:
          type: string
          format: date-time
          nullable: true
        isKYCCompliant:
          type: boolean
          readOnly: true
        tradingName:
          type: string
          nullable: true
        taxCountryCode:
          type: string
          nullable: true
      additionalProperties: false
    CountryModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        iso3:
          type: string
          nullable: true
        phoneCode:
          type: integer
          format: int32
        currencies:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    CredentialModel:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        otpType:
          "$ref": "#/components/schemas/OTPType"
        otp:
          type: string
          nullable: true
      additionalProperties: false
    CurrencyItemModel:
      type: object
      properties:
        isActive:
          type: boolean
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        symbol:
          type: string
          nullable: true
        rate:
          type: number
          format: double
        dailyWithdrawalLimit:
          type: number
          format: double
        transferFee:
          type: number
          format: double
        depositTypes:
          type: array
          items:
            type: string
          nullable: true
        allowCurrencyExchange:
          type: boolean
      additionalProperties: false
    DescriptionModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
          nullable: true
      additionalProperties: false
    DocumentModel:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
      additionalProperties: false
    DocumentTypeModel:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        documents:
          type: array
          items:
            "$ref": "#/components/schemas/DocumentModel"
          nullable: true
      additionalProperties: false
    ErrorModel:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        statusCode:
          type: integer
          format: int32
        status:
          type: string
          nullable: true
        errorCode:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
      additionalProperties: false
    ISGPayModel:
      type: object
      properties:
        url:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        terminalId:
          type: string
          nullable: true
        bankId:
          type: string
          nullable: true
        encData:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    ItemDetailModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        categoryHashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        quantity:
          type: string
          nullable: true
        unit:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        rateType:
          type: string
          nullable: true
        taxRate:
          type: string
          nullable: true
        isTaxInclusive:
          type: boolean
        isInactive:
          type: boolean
        attachment:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        properties:
          type: array
          items:
            "$ref": "#/components/schemas/ItemPropertyModel"
          nullable: true
      additionalProperties: false
    ItemListModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        categoryHashId:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        thumbnail:
          type: string
          nullable: true
      additionalProperties: false
    ItemPropertyModel:
      type: object
      properties:
        propertyHashId:
          type: string
          nullable: true
        sortOrder:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
      additionalProperties: false
    LedgerBankingModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        accountName:
          type: string
          nullable: true
        accountNo:
          type: string
          nullable: true
        bic:
          type: string
          nullable: true
        branch:
          type: string
          nullable: true
        branchCode:
          type: string
          nullable: true
        iban:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
      additionalProperties: false
    LinkedWalletModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        access:
          type: string
          nullable: true
        wallets:
          type: array
          items:
            "$ref": "#/components/schemas/WalletAccountModel"
          nullable: true
      additionalProperties: false
    MerchantListModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        theme:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int64
          nullable: true
        isVisible:
          type: boolean
        allowPayments:
          type: boolean
          readOnly: true
      additionalProperties: false
    MerchantRequestPaymentTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        fromContact:
          type: string
          nullable: true
        toAccountId:
          type: integer
          format: int64
      additionalProperties: false
    MessageModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        contactId:
          type: integer
          format: int64
        recipientId:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
          nullable: true
        typeCode:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        isRead:
          type: boolean
        isImportant:
          type: boolean
        isDeleted:
          type: boolean
        label:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        recipientName:
          type: string
          nullable: true
        transaction:
          "$ref": "#/components/schemas/WalletTranModel"
      additionalProperties: false
    MessagePageModel:
      type: object
      properties:
        metaData:
          "$ref": "#/components/schemas/MetaDataModel"
        rows:
          type: array
          items:
            "$ref": "#/components/schemas/MessageModel"
          nullable: true
        unRead:
          type: integer
          format: int64
      additionalProperties: false
    MetaDataModel:
      type: object
      properties:
        count:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        pageStart:
          type: integer
          format: int32
          readOnly: true
        pageEnd:
          type: integer
          format: int32
          readOnly: true
        currentPage:
          type: integer
          format: int32
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        isPrevious:
          type: boolean
          readOnly: true
        previousPage:
          type: integer
          format: int32
          readOnly: true
        isNext:
          type: boolean
          readOnly: true
        nextPage:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    NoteEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        createById:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        accountId:
          type: integer
          format: int64
        label:
          type: string
          nullable: true
        attachment:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        typeCode:
          type: string
          nullable: true
        isPrivate:
          type: boolean
      additionalProperties: false
    OTPType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - -1
      type: integer
      format: int32
    PendingTransactionStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    PreferenceModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hashId:
          type: string
          nullable: true
        isCookiesAllowed:
          type: boolean
        isUserNameVisible:
          type: boolean
        isEmailVisible:
          type: boolean
        isPhoneVisible:
          type: boolean
        isLocationVisible:
          type: boolean
        findOption:
          type: integer
          format: int32
        receiveSupportNotification:
          type: boolean
        latLng:
          type: string
          nullable: true
        profilePicture:
          type: string
          nullable: true
        notificationCount:
          type: integer
          format: int32
        notificationPushToken:
          type: string
          nullable: true
        agentDepositFee:
          type: number
          format: double
          nullable: true
        agentWithdrawalFee:
          type: number
          format: double
          nullable: true
        transferFee:
          type: number
          format: double
        kycLevel:
          type: integer
          format: int32
        merchantLevel:
          type: integer
          format: int32
        merchantFee:
          type: number
          format: double
        depositLimit:
          type: number
          format: double
        withdrawalLimit:
          type: number
          format: double
        payFeesFromSavings:
          type: boolean
        lastLogin:
          type: string
          format: date-time
          nullable: true
        registeredOn:
          type: string
          format: date-time
          nullable: true
        recruitedOn:
          type: string
          format: date-time
          nullable: true
        agentId:
          type: integer
          format: int64
          nullable: true
        agentCommission:
          type: number
          format: double
        isSubAgent:
          type: boolean
          readOnly: true
        notifyViaEmail:
          type: boolean
        notifyOnNewApproval:
          type: boolean
        notifyOnNewTransaction:
          type: boolean
        notifyOnNewTicket:
          type: boolean
        approvalWebhook:
          type: string
          nullable: true
        paymentWebhook:
          type: string
          nullable: true
        requestPaymentWebhook:
          type: string
          nullable: true
        allowMarketingEmails:
          type: boolean
        defaultOTPType:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ProfileAgentLocationModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        latLng:
          type: string
          nullable: true
      additionalProperties: false
    ProfileFullModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isInactive:
          type: boolean
        isSuspended:
          type: boolean
        isAgent:
          type: boolean
        isUnlocked:
          type: boolean
        usePaymentPin:
          type: boolean
        lastLogin:
          type: string
          format: date-time
          nullable: true
        registeredOn:
          type: string
          format: date-time
          nullable: true
        recruitedOn:
          type: string
          format: date-time
          nullable: true
        contact:
          "$ref": "#/components/schemas/ContactModel"
        preference:
          "$ref": "#/components/schemas/PreferenceModel"
        userWallets:
          type: array
          items:
            "$ref": "#/components/schemas/WalletAccountModel"
          nullable: true
        savingWallets:
          type: array
          items:
            "$ref": "#/components/schemas/WalletAccountModel"
          nullable: true
        agentWallets:
          type: array
          items:
            "$ref": "#/components/schemas/WalletAccountModel"
          nullable: true
        linkedWallets:
          type: array
          items:
            "$ref": "#/components/schemas/LinkedWalletModel"
          nullable: true
      additionalProperties: false
    ProfileModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isInactive:
          type: boolean
        isSuspended:
          type: boolean
        isAgent:
          type: boolean
        isUnlocked:
          type: boolean
        usePaymentPin:
          type: boolean
        lastLogin:
          type: string
          format: date-time
          nullable: true
        registeredOn:
          type: string
          format: date-time
          nullable: true
        recruitedOn:
          type: string
          format: date-time
          nullable: true
        preference:
          "$ref": "#/components/schemas/PreferenceModel"
      additionalProperties: false
    ProfileRegisterModel:
      type: object
      properties:
        userName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        otpType:
          type: string
          nullable: true
        otp:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    RelationshipModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contactId:
          type: integer
          format: int64
        relatedContactId:
          type: integer
          format: int64
        userName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        latestMessage:
          type: string
          format: date-time
          nullable: true
        unReadMessages:
          type: integer
          format: int32
        statusCode:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        reference:
          type: integer
          format: int32
          nullable: true
        referenceStatus:
          type: string
          nullable: true
          readOnly: true
        endorsed:
          type: integer
          format: int32
          nullable: true
        endorsedStatus:
          type: string
          nullable: true
          readOnly: true
        walletAccess:
          type: string
          nullable: true
        remoteAccess:
          type: string
          nullable: true
        profilePicture:
          type: string
          nullable: true
        isAgent:
          type: boolean
        isSubAgent:
          type: boolean
        isRemoteAgent:
          type: boolean
        agentAccess:
          type: boolean
        remoteAgentAccess:
          type: boolean
      additionalProperties: false
    RelationshipTranModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        balance:
          type: number
          format: double
          readOnly: true
        paid:
          type: number
          format: double
          readOnly: true
        received:
          type: number
          format: double
          readOnly: true
        pending:
          type: number
          format: double
          readOnly: true
        journals:
          type: number
          format: double
          readOnly: true
        fees:
          type: number
          format: double
          readOnly: true
        transactions:
          type: array
          items:
            "$ref": "#/components/schemas/WalletTranModel"
          nullable: true
      additionalProperties: false
    ReportColumnModel:
      type: object
      properties:
        index:
          type: integer
          format: int64
        type:
          type: string
          nullable: true
        header:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        show:
          type: boolean
        headerCss:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        css:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
      additionalProperties: false
    ReportHeadingModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        titleCss:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        subTitle:
          type: string
          nullable: true
        subTitleCss:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
      additionalProperties: false
    ReportModel:
      type: object
      properties:
        type:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        heading:
          "$ref": "#/components/schemas/ReportHeadingModel"
        columns:
          type: array
          items:
            "$ref": "#/components/schemas/ReportColumnModel"
          nullable: true
        isLandscape:
          type: boolean
        isFitToPage:
          type: boolean
        isDefault:
          type: boolean
      additionalProperties: false
    ReportTypeEnum:
      enum:
      - 0
      - 1
      - 2
      - -1
      type: integer
      format: int32
    StringKeyPairModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    SubAgentModel:
      type: object
      properties:
        profileId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        commission:
          type: number
          format: double
        isSharedWallet:
          type: boolean
        taskId:
          type: integer
          format: int64
          nullable: true
        status:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    SubscriptionModel:
      type: object
      properties:
        hashId:
          type: string
          nullable: true
        categoryHashId:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        pin:
          type: boolean
      additionalProperties: false
    SystemModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        major:
          type: integer
          format: int32
        minor:
          type: integer
          format: int32
        buildNo:
          type: integer
          format: int32
        copyright:
          type: string
          nullable: true
        messagingServer:
          type: string
          nullable: true
      additionalProperties: false
    TaskModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        accountId:
          type: integer
          format: int64
          nullable: true
        contactId:
          type: integer
          format: int64
          nullable: true
        contact:
          type: string
          nullable: true
        typeCode:
          type: string
          nullable: true
        createById:
          type: integer
          format: int64
        createdByName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        assignedToId:
          type: integer
          format: int64
          nullable: true
        assigneeName:
          type: string
          nullable: true
        isHidden:
          type: boolean
        status:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        memo:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        comments:
          type: array
          items:
            type: string
          nullable: true
        attachmentCount:
          type: integer
          format: int32
      additionalProperties: false
    TaskNoteModel:
      type: object
      properties:
        task:
          "$ref": "#/components/schemas/TaskModel"
        notes:
          type: array
          items:
            "$ref": "#/components/schemas/NoteEntity"
          nullable: true
      additionalProperties: false
    TokenModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        isSubAgent:
          type: boolean
        token:
          type: string
          nullable: true
        expires:
          type: string
          format: date-time
        language:
          type: string
          nullable: true
      additionalProperties: false
    TranHeadDataModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdById:
          type: integer
          format: int64
        type:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        reference:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        amount:
          type: number
          format: double
      additionalProperties: false
    TranHeadUserModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
          nullable: true
        headerTypeCode:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        accountId:
          type: integer
          format: int64
          nullable: true
        contraAccountId:
          type: integer
          format: int64
          nullable: true
        currencyCode:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        conversionCurrencyCode:
          type: string
          nullable: true
        conversionAmount:
          type: number
          format: double
          nullable: true
        reference:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        account:
          type: string
          nullable: true
        contraAccount:
          type: string
          nullable: true
        headerType:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    TransactionSummaryModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
          nullable: true
        interval:
          type: string
          nullable: true
        amount:
          type: number
          format: double
      additionalProperties: false
    UserAgentDepositTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
        agentId:
          type: integer
          format: int64
        feeRate:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    UserAgentWithdrawalTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
        agentId:
          type: integer
          format: int64
        feeRate:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    UserBankDepositTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
        bankId:
          type: integer
          format: int64
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    UserCardDepositTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    UserInstantPaymentTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    UserRequestPaymentTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        fromAccountId:
          type: integer
          format: int64
        toAccountId:
          type: integer
          format: int64
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    UserSavingsDepositTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
      additionalProperties: false
    UserSavingsWithdrawalTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountId:
          type: integer
          format: int64
      additionalProperties: false
    UserSendPaymentTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        fromAccountId:
          type: integer
          format: int64
        toAccountId:
          type: integer
          format: int64
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    UserWalletTransferTransactionModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        fromAccountId:
          type: integer
          format: int64
        toAccountId:
          type: integer
          format: int64
        currencyCode:
          type: string
          nullable: true
        toAmount:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    WalletAccountModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        hashId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
          readOnly: true
        referenceNo:
          type: integer
          format: int32
        referenceAlternate:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int64
        contact:
          type: string
          nullable: true
        isInactive:
          type: boolean
        merchantCode:
          type: string
          nullable: true
        business:
          type: number
          format: double
        trust:
          type: number
          format: double
        realTrust:
          type: number
          format: double
        realBusiness:
          type: number
          format: double
        realTradeLimit:
          type: number
          format: double
          nullable: true
        tradeLimit:
          type: number
          format: double
        oneOffWithdrawalAmount:
          type: number
          format: double
          nullable: true
        dailyWithdrawalLimit:
          type: number
          format: double
          nullable: true
        realReserve:
          type: number
          format: double
          nullable: true
        currencyCode:
          type: string
          nullable: true
        symbol:
          type: string
          nullable: true
        newTransactionCount:
          type: integer
          format: int32
        isDefault:
          type: boolean
        lastTranHeadId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    WalletModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contactId:
          type: integer
          format: int64
        contact:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        profilePicture:
          type: string
          nullable: true
        isDefault:
          type: boolean
        isMerchant:
          type: boolean
      additionalProperties: false
    WalletTranModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tranHeadId:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        reference:
          type: string
          nullable: true
        tranTypeCode:
          type: string
          nullable: true
        tranType:
          type: string
          nullable: true
        action:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        accountId:
          type: integer
          format: int64
        refAccountId:
          type: integer
          format: int64
          nullable: true
        contactId:
          type: integer
          format: int64
        description:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        symbol:
          type: string
          nullable: true
        isTrust:
          type: boolean
        realAmount:
          type: number
          format: double
        amount:
          type: number
          format: double
        feeAmount:
          type: number
          format: double
        feeReal:
          type: number
          format: double
        approval:
          "$ref": "#/components/schemas/ApprovalModel"
        status:
          type: string
          nullable: true
      additionalProperties: false
    WalletTransactionModel:
      type: object
      properties:
        walletAccount:
          "$ref": "#/components/schemas/WalletAccountModel"
        transactions:
          type: array
          items:
            "$ref": "#/components/schemas/WalletTranModel"
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\nEnter
        'Bearer' [space] and then your token in the text input below.\r\n\r\nExample:
        'Bearer 12345abcdef'"
      name: Authorization
      in: header
security:
- Bearer: []
